name: apigateway-service/build, push and deploy

on:
  push:
    branches: 
      - main
    paths:
      - 'apigateway-service/**'

  workflow_dispatch:

env:
  DOCKER_USERNAME: "snulifeo2"
  SERVICE_NAME: "apigateway-service"

jobs:
  build-and-push:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'


    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get latest Docker Hub tag
      id: latesttag
      run: |
        LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_NAME }}/tags/" | jq -r '.results[0].name')
        echo "::set-output name=tag::$LATEST_TAG"

    - name: Increment version
      id: incversion
      run: |
        LATEST_VERSION=${{ steps.latesttag.outputs.tag }}
        # Increment the version (Assuming SemVer, increasing the patch version)
        NEW_VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "::set-output name=newversion::$NEW_VERSION"


   - name: Build and push Docker image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_NAME }}:${{ steps.incversion.outputs.newversion }} .
        docker push ${{ env.DOCKER_USERNAME }}/${{ env.SERVICE_NAME }}:${{ steps.incversion.outputs.newversion }}


  deploy:
    needs: build-and-push
    runs-on: self-hosted

    steps:
    
    - name: Deploy to Kubernetes
      run: |
        sed -i 's|${{ env.SERVICE_NAME }}:.*|${{ env.SERVICE_NAME }}:${{ steps.incversion.outputs.newversion }}|' /home/axiology/usedshop/${{ env.SERVICE_NAME }}.yml
        kubectl apply -f /home/axiology/usedshop/${{ env.SERVICE_NAME }}.yml
